<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.itcast</groupId>
	<artifactId>Mapper-Generator</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<dependencies>
		<!-- 原生Mybatis 的逆向工程jar 包 -->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.3.6</version>
		</dependency>
		<!-- 原生 mybatis 的核心包 
			没有这个照样能生成文件，但是因为生成的文件中可能需要引用此jar 包的 RowBows 类，
			如果不添加的话，会显示找不到这个类，所以这里也加入此jar包，看起来舒服一些
		-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.2</version>
		</dependency>
		<!-- 通用 Mapper 需要的jar包
			生成的 dao 层接口需要继承 通用mapper 提供的 Mapper<T> 接口，这个接口是在通用Mapper包里面提供的
			没有此包也可以生成文件，但是生成的文件会说找不到这个类，所以这里添加此jar包，看起来舒服一点
		-->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper</artifactId>
			<version>4.0.0</version>
		</dependency>
		
		<!-- 通用 mapper 的逆向工程jar 包
		其实如果我们使用单独的工程来生成文件，只需要原生的逆向工程jar包和此jar 包 ， 再加上连接数据库的驱动包即可
		 -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-generator</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- 需要连接数据库，所以需要数据库驱动包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.12</version>
		</dependency>
	</dependencies>
</project>